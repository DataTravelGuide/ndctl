// SPDX-License-Identifier: GPL-2.0

cxl-list(1)
===========

NAME
----
cxl-list - List CXL capable memory devices, and their attributes in json.

SYNOPSIS
--------
[verse]
'cxl list' [<options>]

Walk the CXL capable device hierarchy in the system and list all device
instances along with some of their major attributes.

Options can be specified to limit the output to specific objects. When a
single object type is specified the return json object is an array of
just those objects, when multiple objects types are specified the
returned the returned object may be an array of arrays with the inner
array named for the given object type.

Filters can by specifed as either a single identidier, a space separated
quoted string, or a comma separated list. When multiple filter
identifiers are specified within a filter string, like "-m
mem0,mem1,mem2", they are combined as an 'OR' filter.  When multiple
filter string types are specified, like "-m mem0,mem1,mem2 -p port10",
they are combined as an 'AND' filter. So, "-m mem0,mem1,mem2 -p port10"
would only list objects that are beneath port10 AND map mem0, mem1, OR
mem2.

The --human option in addition to reformatting some fields to more human
friendly strings also unwraps the array to reduce the number of lines of
output.

EXAMPLE
-------
----
# cxl list --memdevs
[
  {
    "memdev":"mem0",
    "pmem_size":268435456,
    "ram_size":0,
    "serial":0
  }
]

# cxl list -BMu
[
  {
    "anon memdevs":[
      {
        "memdev":"mem0",
        "pmem_size":"256.00 MiB (268.44 MB)",
        "ram_size":0,
        "serial":"0"
      }
    ]
  },
  {
    "buses":[
      {
        "bus":"root0",
        "provider":"ACPI.CXL"
      }
    ]
  }
]

----

OPTIONS
-------
-m::
--memdev=::
	Specify CXL memory device name(s), or device id(s), to filter the listing. For example:
----
# cxl list -M --memdev="0 mem3 5"
[
  {
    "memdev":"mem0",
    "pmem_size":268435456,
    "ram_size":0,
    "serial":0
  },
  {
    "memdev":"mem3",
    "pmem_size":268435456,
    "ram_size":268435456,
    "serial":2
  },
  {
    "memdev":"mem5",
    "pmem_size":268435456,
    "ram_size":268435456,
    "serial":4
  }
]
----

-s::
--serial=::
	Specify CXL memory device serial number(s) to filter the listing

-M::
--memdevs::
	Include CXL memory devices in the listing

-i::
--idle::
	Include idle (not enabled / zero-sized) devices in the listing

-H::
--health::
	Include health information in the memdev listing. Example listing:
----
# cxl list -m mem0 -H
[
  {
    "memdev":"mem0",
    "pmem_size":268435456,
    "ram_size":268435456,
    "health":{
      "maintenance_needed":true,
      "performance_degraded":true,
      "hw_replacement_needed":true,
      "media_normal":false,
      "media_not_ready":false,
      "media_persistence_lost":false,
      "media_data_lost":true,
      "media_powerloss_persistence_loss":false,
      "media_shutdown_persistence_loss":false,
      "media_persistence_loss_imminent":false,
      "media_powerloss_data_loss":false,
      "media_shutdown_data_loss":false,
      "media_data_loss_imminent":false,
      "ext_life_used":"normal",
      "ext_temperature":"critical",
      "ext_corrected_volatile":"warning",
      "ext_corrected_persistent":"normal",
      "life_used_percent":15,
      "temperature":25,
      "dirty_shutdowns":10,
      "volatile_errors":20,
      "pmem_errors":30
    }
  }
]
----

-B::
--buses::
	Include 'bus' / CXL root object(s) in the listing. Typically, on ACPI
	systems the bus object is a singleton associated with the ACPI0017
	device, but there are test scenerios where there may be multiple CXL
	memory hierarchies.
----
# cxl list -B
[
  {
    "bus":"root3",
    "provider":"cxl_test"
  },
  {
    "bus":"root0",
    "provider":"ACPI.CXL"
  }
]
----

-b::
--bus=::
	Specify CXL root device name(s), device id(s), and / or CXL bus provider
	names to filter the listing. The supported provider names are "ACPI.CXL"
	and "cxl_test".

include::human-option.txt[]

include::verbose-option.txt[]

include::../copyright.txt[]

SEE ALSO
--------
linkcxl:ndctl-list[1]
